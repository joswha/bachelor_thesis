<?xml version="1.0" encoding="UTF-8"?><DataFlowResults FileFormatVersion="102" TerminationState="DataFlowOutOfMemory"><Results><Result><Sink Statement="virtualinvoke $r1.&lt;android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)&gt;(&quot;android:support:fragments&quot;, $r5)" Method="&lt;androidx.fragment.app.FragmentActivity: void onSaveInstanceState(android.os.Bundle)&gt;"><AccessPath Value="$r5" Type="androidx.fragment.app.FragmentManagerState" TaintSubFields="true"><Fields><Field Value="&lt;androidx.fragment.app.FragmentManagerState: int mBackStackIndex&gt;" Type="int"></Field></Fields></AccessPath></Sink><Sources><Source Statement="$d0 = virtualinvoke $r1.&lt;android.location.Location: double getLatitude()&gt;()" Method="&lt;androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)&gt;"><AccessPath Value="$d0" Type="double" TaintSubFields="true"></AccessPath></Source><Source Statement="$d0 = virtualinvoke $r1.&lt;android.location.Location: double getLatitude()&gt;()" Method="&lt;androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)&gt;"><AccessPath Value="$d0" Type="double" TaintSubFields="true"></AccessPath></Source><Source Statement="$d1 = virtualinvoke $r1.&lt;android.location.Location: double getLongitude()&gt;()" Method="&lt;androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)&gt;"><AccessPath Value="$d1" Type="double" TaintSubFields="true"></AccessPath></Source><Source Statement="$d1 = virtualinvoke $r1.&lt;android.location.Location: double getLongitude()&gt;()" Method="&lt;androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)&gt;"><AccessPath Value="$d1" Type="double" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="interfaceinvoke $r30.&lt;android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)&gt;(&quot;lastCalculated&quot;, $i0)" Method="&lt;org.secuso.privacyfriendlysudoku.ui.DailySudokuActivity: void onCreate(android.os.Bundle)&gt;"><AccessPath Value="$i0" Type="int" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r2 = interfaceinvoke $r0.&lt;android.database.Cursor: java.lang.String getString(int)&gt;($i1)" Method="&lt;org.secuso.privacyfriendlysudoku.controller.database.columns.DailySudokuColumns: org.secuso.privacyfriendlysudoku.controller.database.model.DailySudoku getLevel(android.database.Cursor)&gt;"><AccessPath Value="$r2" Type="java.lang.String" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;(&quot;FragmentManager&quot;, $r3)" Method="&lt;androidx.fragment.app.FragmentManager: void moveFragmentToExpectedState(androidx.fragment.app.Fragment)&gt;"><AccessPath Value="$r3" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$r2 = interfaceinvoke $r0.&lt;android.database.Cursor: java.lang.String getString(int)&gt;($i1)" Method="&lt;org.secuso.privacyfriendlysudoku.controller.database.columns.DailySudokuColumns: org.secuso.privacyfriendlysudoku.controller.database.model.DailySudoku getLevel(android.database.Cursor)&gt;"><AccessPath Value="$r2" Type="java.lang.String" TaintSubFields="true"></AccessPath></Source></Sources></Result><Result><Sink Statement="staticinvoke &lt;android.util.Log: int d(java.lang.String,java.lang.String)&gt;(&quot;FragmentManager&quot;, $r3)" Method="&lt;androidx.fragment.app.FragmentManager: void moveToState(androidx.fragment.app.Fragment,int)&gt;"><AccessPath Value="$r3" Type="java.lang.String" TaintSubFields="true"></AccessPath></Sink><Sources><Source Statement="$d0 = virtualinvoke $r1.&lt;android.location.Location: double getLatitude()&gt;()" Method="&lt;androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)&gt;"><AccessPath Value="$d0" Type="double" TaintSubFields="true"></AccessPath></Source><Source Statement="$d0 = virtualinvoke $r1.&lt;android.location.Location: double getLatitude()&gt;()" Method="&lt;androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)&gt;"><AccessPath Value="$d0" Type="double" TaintSubFields="true"></AccessPath></Source><Source Statement="$d0 = virtualinvoke $r1.&lt;android.location.Location: double getLatitude()&gt;()" Method="&lt;androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)&gt;"><AccessPath Value="$d0" Type="double" TaintSubFields="true"></AccessPath></Source><Source Statement="$d1 = virtualinvoke $r1.&lt;android.location.Location: double getLongitude()&gt;()" Method="&lt;androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)&gt;"><AccessPath Value="$d1" Type="double" TaintSubFields="true"></AccessPath></Source><Source Statement="$r2 = interfaceinvoke $r0.&lt;android.database.Cursor: java.lang.String getString(int)&gt;($i1)" Method="&lt;org.secuso.privacyfriendlysudoku.controller.database.columns.DailySudokuColumns: org.secuso.privacyfriendlysudoku.controller.database.model.DailySudoku getLevel(android.database.Cursor)&gt;"><AccessPath Value="$r2" Type="java.lang.String" TaintSubFields="true"></AccessPath></Source><Source Statement="$d1 = virtualinvoke $r1.&lt;android.location.Location: double getLongitude()&gt;()" Method="&lt;androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)&gt;"><AccessPath Value="$d1" Type="double" TaintSubFields="true"></AccessPath></Source><Source Statement="$d1 = virtualinvoke $r1.&lt;android.location.Location: double getLongitude()&gt;()" Method="&lt;androidx.appcompat.app.TwilightManager: void updateState(android.location.Location)&gt;"><AccessPath Value="$d1" Type="double" TaintSubFields="true"></AccessPath></Source></Sources></Result></Results><PerformanceData><PerformanceEntry Name="CallgraphConstructionSeconds" Value="11"></PerformanceEntry><PerformanceEntry Name="TaintPropagationSeconds" Value="88"></PerformanceEntry><PerformanceEntry Name="PathReconstructionSeconds" Value="12"></PerformanceEntry><PerformanceEntry Name="TotalRuntimeSeconds" Value="111"></PerformanceEntry><PerformanceEntry Name="MaxMemoryConsumption" Value="3101"></PerformanceEntry><PerformanceEntry Name="SourceCount" Value="11"></PerformanceEntry><PerformanceEntry Name="SinkCount" Value="153"></PerformanceEntry></PerformanceData></DataFlowResults>